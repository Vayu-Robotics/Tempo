// Copyright Tempo Simulation, LLC. All Rights Reserved

syntax = "proto3";

import "TempoSensors/Common.proto";

enum ImageType {
  COLOR = 0;
  DEPTH_AND_LABELS = 1;
}

enum CompressionLevel {
  MIN = 0; // 100
  VERY_LOW = 1; // 90
  LOW = 2; // 80
  MID = 3; // 70
  HIGH = 4; // 60
  VERY_HIGH = 5; // 50
  MAX = 6; // 40
}

message CameraDescriptor {
  int32 id = 1;
  string name = 2;
  ImageType image_type = 3;
  int32 width = 4;
  int32 height = 5;
  float rate = 6;
}

message Image {
  TempoSensors.MeasurementHeader header = 1;
  uint32 width = 2;
  uint32 height = 3;
  bytes data = 4;
}

message AvailableCamerasRequest {

}

message AvailableCamerasResponse {
  repeated CameraDescriptor available_cameras = 1;
}

message StreamImagesRequest{
  int32 camera_id = 1;
  CompressionLevel compression_level = 2;
}

service CameraService {
  rpc GetAvailableCameras(AvailableCamerasRequest) returns (AvailableCamerasResponse);
  
  rpc StreamImages(StreamImagesRequest) returns (stream Image);
}
