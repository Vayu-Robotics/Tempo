name: Build and Package Tempo in TempoSample Project | Linux | UE5.4

on:
  push:
  pull_request:
  workflow_dispatch:
    inputs:
      clean:
        type: boolean
        description: Build clean?
        default: false
env:
  UNREAL_VERSION: "5.4.4"

jobs:
  build:
    name: Build and Package Tempo Plugins
    runs-on: ubuntu-22.04
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true
    steps:
    - name: Free Disk Space
      uses: jlumbroso/free-disk-space@main
      with:
        tool-cache: true
        android: true
        dotnet: true
        haskell: true
        large-packages: false
        docker-images: false
        swap-storage: false
    - name: Checkout TempoSample
      uses: actions/checkout@v4
      with:
        repository: tempo-sim/TempoSample
        ref: ci_test
        path: TempoSample
        fetch-depth: 0
    - name: Checkout Tempo
      uses: actions/checkout@v4
      with:
        path: TempoSample/Plugins/Tempo
        submodules: recursive
        fetch-depth: 0
    - name: Find Common Ancestor with Main
      id: common_ancestor
      run: |
        cd TempoSample/Plugins/Tempo && echo "COMMON_ANCESTOR=$(git merge-base --fork-point origin/main)" >> $GITHUB_OUTPUT
    - name: Restore Build Cache from Main Common Ancestor
      if: github.ref != 'refs/heads/main'
      id: build_cache
      uses: actions/cache/restore@v4
      with:
        path: |
          TempoSample/**/*.pb.cc
          TempoSample/**/*.pb.h
          TempoSample/Binaries/**
          TempoSample/Intermediate/**
          TempoSample/DerivedDataCache/**
          TempoSample/Saved/**
          TempoSample/Plugins/**/Intermediate/**
          TempoSample/Plugins/**/Binaries/**
        key: tempo-build-${{ env.UNREAL_VERSION }}-${{ steps.common_ancestor.outputs.COMMON_ANCESTOR }}
    - name: Debug Cook Timestamps
      run: |
        echo "Source files:"
        find TempoSample/Source -type f -exec stat -c "%y %n" {} \;
        echo "Content files:"
        find TempoSample/Content -type f -exec stat -c "%y %n" {} \;
        echo "DDC files:"
        find TempoSample/DerivedDataCache -type f -exec stat -c "%y %n" {} \;
        echo "Shader cache:"
        find TempoSample/Saved/ShaderCaches -type f -exec stat -c "%y %n" {} \;
        echo "Intermediate:"
        find TempoSample/Intermediate -type f -exec stat -c "%y %n" {} \;
    - name: Suppress Error in SyncDeps (TODO Fix this)
      run: |
        mkdir -p TempoSample/Plugins/Tempo/TempoCore/Source/ThirdParty/gRPC/Libraries
        touch TempoSample/Plugins/Tempo/TempoCore/Source/ThirdParty/gRPC/Libraries/dummy.txt
    - name: Fixup Source File Modification Timestamps and Permissions
      run: |
        # The modification timestamps are recreated on checkout. This overwrites them with their respective commit dates
        # so that the cached results in the Intermediate folder will be considered valid during the build.
        cd ${{ github.workspace }}/TempoSample
        git ls-files | while read file; do
          timestamp=$(git log -1 --format=%cd --date=iso "$file")
          touch -d "$timestamp" "$file"
        done
        # Same for Tempo source files
        cd ${{ github.workspace }}/TempoSample/Plugins/Tempo
        git ls-files | while read file; do
          timestamp=$(git log -1 --format=%cd --date=iso "$file")
          touch -d "$timestamp" "$file"
        done
        # Set the permissions of the source files such that they can be accessed in the docker container.
        sudo chown -R 1000:1000 ${{ github.workspace }}/TempoSample/
        sudo chmod -R 755 ${{ github.workspace }}/TempoSample/
    - name: Cache Engine Mods
      id: cache-engine-mods
      uses: actions/cache@v4
      with:
        path: |
          .engine-mods-cache/Engine/Plugins/Runtime/ZoneGraph
          .engine-mods-cache/Engine/Plugins/AI/MassCrowd
          .engine-mods-cache/Engine/Source/Programs/UnrealBuildTool
          .engine-mods-cache/Engine/Binaries/DotNET/UnrealBuildTool
          .engine-mods-cache/Engine/Binaries/DotNET/AutomationTool
        key: tempo-engine-mods-${{ env.UNREAL_VERSION }}-${{ hashFiles('TempoSample/Plugins/Tempo/EngineMods/**') }}
    - name: Patch Docker Daemon Data Root
      run: |
        # Credit to https://github.com/orgs/community/discussions/26357
        # The drive mounted at /mnt has a lot more free space than the main volume.
        # Tell docker to store images there instead.
        DOCKER_DATA_ROOT='/mnt/var/lib/docker'
        DOCKER_DAEMON_JSON='/etc/docker/daemon.json'
        sudo mkdir -p "${DOCKER_DATA_ROOT}"
        jq --arg dataroot "${DOCKER_DATA_ROOT}" '. + {"data-root": $dataroot}' "${DOCKER_DAEMON_JSON}" > "/tmp/docker.json.tmp"
        sudo mv "/tmp/docker.json.tmp" "${DOCKER_DAEMON_JSON}"
        sudo systemctl restart docker
    - name: Log in to Epic Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ secrets.EPIC_DOCKER_USERNAME }}
        password: ${{ secrets.EPIC_DOCKER_TOKEN }}
    - name: Build Tempo Unreal Docker Image
      run: |
        docker build --build-arg UNREAL_VERSION=${{ env.UNREAL_VERSION }} --tag 'tempo_unreal_image' -f ${{ github.workspace }}/TempoSample/Plugins/Tempo/Dockerfile .
    - name: Initialize Engine Mods Cache (if not restored)
      if: steps.cache-engine-mods.outputs.cache-hit != 'true'
      run: |
        mkdir -p .engine-mods-cache/Engine/Plugins/Runtime
        mkdir -p .engine-mods-cache/Engine/Plugins/AI
        mkdir -p .engine-mods-cache/Engine/Source/Programs
        mkdir -p .engine-mods-cache/Engine/Binaries/DotNET
        docker create --name temp_engine tempo_unreal_image
        docker cp temp_engine:/home/ue4/UnrealEngine/Engine/Plugins/Runtime/ZoneGraph ${{ github.workspace }}/.engine-mods-cache/Engine/Plugins/Runtime
        docker cp temp_engine:/home/ue4/UnrealEngine/Engine/Plugins/AI/MassCrowd ${{ github.workspace }}/.engine-mods-cache/Engine/Plugins/AI
        docker cp temp_engine:/home/ue4/UnrealEngine/Engine/Source/Programs/UnrealBuildTool ${{ github.workspace }}/.engine-mods-cache/Engine/Source/Programs
        docker cp temp_engine:/home/ue4/UnrealEngine/Engine/Binaries/DotNET/UnrealBuildTool ${{ github.workspace }}/.engine-mods-cache/Engine/Binaries/DotNET
        docker cp temp_engine:/home/ue4/UnrealEngine/Engine/Binaries/DotNET/AutomationTool ${{ github.workspace }}/.engine-mods-cache/Engine/Binaries/DotNET
        docker rm temp_engine
    - name: Fix Engine Mods Permissions
      run: |
        # Set the permissions of the engine mods files such that they can be accessed in the docker container.
        sudo chown -R 1000:1000 .engine-mods-cache/
        sudo chmod -R 755 .engine-mods-cache/
    - name: Sync Third Party Dependencies
      run: |
        docker run --rm \
          -v ${{ github.workspace }}/.engine-mods-cache/Engine/Plugins/Runtime/ZoneGraph:/home/ue4/UnrealEngine/Engine/Plugins/Runtime/ZoneGraph \
          -v ${{ github.workspace }}/.engine-mods-cache/Engine/Plugins/AI/MassCrowd:/home/ue4/UnrealEngine/Engine/Plugins/AI/MassCrowd \
          -v ${{ github.workspace }}/.engine-mods-cache/Engine/Source/Programs/UnrealBuildTool:/home/ue4/UnrealEngine/Engine/Source/Programs/UnrealBuildTool \
          -v ${{ github.workspace }}/.engine-mods-cache/Engine/Binaries/DotNET/UnrealBuildTool:/home/ue4/UnrealEngine/Engine/Binaries/DotNET/UnrealBuildTool \
          -v ${{ github.workspace }}/.engine-mods-cache/Engine/Binaries/DotNET/AutomationTool:/home/ue4/UnrealEngine/Engine/Binaries/DotNET/AutomationTool \
          -v ${{ github.workspace }}/TempoSample:/home/ue4/TempoSample \
          tempo_unreal_image \
          /home/ue4/TempoSample/Plugins/Tempo/Scripts/SyncDeps.sh -force
    - name: Install Engine Mods
      run: |
        docker run --rm \
          -v ${{ github.workspace }}/.engine-mods-cache/Engine/Plugins/Runtime/ZoneGraph:/home/ue4/UnrealEngine/Engine/Plugins/Runtime/ZoneGraph \
          -v ${{ github.workspace }}/.engine-mods-cache/Engine/Plugins/AI/MassCrowd:/home/ue4/UnrealEngine/Engine/Plugins/AI/MassCrowd \
          -v ${{ github.workspace }}/.engine-mods-cache/Engine/Source/Programs/UnrealBuildTool:/home/ue4/UnrealEngine/Engine/Source/Programs/UnrealBuildTool \
          -v ${{ github.workspace }}/.engine-mods-cache/Engine/Binaries/DotNET/UnrealBuildTool:/home/ue4/UnrealEngine/Engine/Binaries/DotNET/UnrealBuildTool \
          -v ${{ github.workspace }}/.engine-mods-cache/Engine/Binaries/DotNET/AutomationTool:/home/ue4/UnrealEngine/Engine/Binaries/DotNET/AutomationTool \
          -v ${{ github.workspace }}/TempoSample:/home/ue4/TempoSample \
          tempo_unreal_image \
          /home/ue4/TempoSample/Plugins/Tempo/Scripts/InstallEngineMods.sh
    - name: Clean
      if: ${{ github.event.inputs.clean }}
      run: |
        docker run --rm \
          -v ${{ github.workspace }}/.engine-mods-cache/Engine/Plugins/Runtime/ZoneGraph:/home/ue4/UnrealEngine/Engine/Plugins/Runtime/ZoneGraph \
          -v ${{ github.workspace }}/.engine-mods-cache/Engine/Plugins/AI/MassCrowd:/home/ue4/UnrealEngine/Engine/Plugins/AI/MassCrowd \
          -v ${{ github.workspace }}/.engine-mods-cache/Engine/Source/Programs/UnrealBuildTool:/home/ue4/UnrealEngine/Engine/Source/Programs/UnrealBuildTool \
          -v ${{ github.workspace }}/.engine-mods-cache/Engine/Binaries/DotNET/UnrealBuildTool:/home/ue4/UnrealEngine/Engine/Binaries/DotNET/UnrealBuildTool \
          -v ${{ github.workspace }}/.engine-mods-cache/Engine/Binaries/DotNET/AutomationTool:/home/ue4/UnrealEngine/Engine/Binaries/DotNET/AutomationTool \
          -v ${{ github.workspace }}/TempoSample:/home/ue4/TempoSample \
          tempo_unreal_image \
          /home/ue4/TempoSample/Scripts/Clean.sh
    - name: Build
      run: |
        docker run --rm \
          -v ${{ github.workspace }}/.engine-mods-cache/Engine/Plugins/Runtime/ZoneGraph:/home/ue4/UnrealEngine/Engine/Plugins/Runtime/ZoneGraph \
          -v ${{ github.workspace }}/.engine-mods-cache/Engine/Plugins/AI/MassCrowd:/home/ue4/UnrealEngine/Engine/Plugins/AI/MassCrowd \
          -v ${{ github.workspace }}/.engine-mods-cache/Engine/Source/Programs/UnrealBuildTool:/home/ue4/UnrealEngine/Engine/Source/Programs/UnrealBuildTool \
          -v ${{ github.workspace }}/.engine-mods-cache/Engine/Binaries/DotNET/UnrealBuildTool:/home/ue4/UnrealEngine/Engine/Binaries/DotNET/UnrealBuildTool \
          -v ${{ github.workspace }}/.engine-mods-cache/Engine/Binaries/DotNET/AutomationTool:/home/ue4/UnrealEngine/Engine/Binaries/DotNET/AutomationTool \
          -v ${{ github.workspace }}/TempoSample:/home/ue4/TempoSample \
          tempo_unreal_image \
          /home/ue4/TempoSample/Scripts/Build.sh
    - name: Package
      run: |
        docker run --rm \
          -v ${{ github.workspace }}/.engine-mods-cache/Engine/Plugins/Runtime/ZoneGraph:/home/ue4/UnrealEngine/Engine/Plugins/Runtime/ZoneGraph \
          -v ${{ github.workspace }}/.engine-mods-cache/Engine/Plugins/AI/MassCrowd:/home/ue4/UnrealEngine/Engine/Plugins/AI/MassCrowd \
          -v ${{ github.workspace }}/.engine-mods-cache/Engine/Source/Programs/UnrealBuildTool:/home/ue4/UnrealEngine/Engine/Source/Programs/UnrealBuildTool \
          -v ${{ github.workspace }}/.engine-mods-cache/Engine/Binaries/DotNET/UnrealBuildTool:/home/ue4/UnrealEngine/Engine/Binaries/DotNET/UnrealBuildTool \
          -v ${{ github.workspace }}/.engine-mods-cache/Engine/Binaries/DotNET/AutomationTool:/home/ue4/UnrealEngine/Engine/Binaries/DotNET/AutomationTool \
          -v ${{ github.workspace }}/TempoSample:/home/ue4/TempoSample \
          tempo_unreal_image \
          /home/ue4/TempoSample/Scripts/Package.sh
    - name: Check Free Space
      run: df -h / && df -h /mnt
    - name: Cache Build (if main)
      if: github.ref == 'refs/heads/main'
      uses: actions/cache/save@v4
      with:
        path: |
          TempoSample/**/*.pb.cc
          TempoSample/**/*.pb.h
          TempoSample/Binaries/**
          TempoSample/Intermediate/**
          TempoSample/DerivedDataCache/**
          TempoSample/Saved/**
          TempoSample/Plugins/**/Intermediate/**
          TempoSample/Plugins/**/Binaries/**
        key: tempo-build-${{ env.UNREAL_VERSION }}-${{ github.sha }}
