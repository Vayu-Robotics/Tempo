name: Build and Package Tempo in TempoSample Project | Linux | UE5.4

on: [push, pull_request, workflow_dispatch]

env:
  UNREAL_VERSION: "5.4.4"

jobs:
  build:
    name: Build
    runs-on: ubuntu-22.04
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true
    steps:
    - name: Check Free Space at Start
      run: df -h /
    - name: Free Disk Space
      uses: jlumbroso/free-disk-space@main
      with:
        tool-cache: true
        android: true
        dotnet: true
        haskell: true
        large-packages: false
        docker-images: true
        swap-storage: true
    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y jq rsync
    - name: Checkout TempoSample
      uses: actions/checkout@v4
      with:
        repository: tempo-sim/TempoSample
        path: TempoSample
        fetch-depth: 0
    - name: Checkout Tempo
      uses: actions/checkout@v4
      with:
        path: TempoSample/Plugins/Tempo
        submodules: recursive
        fetch-depth: 0
    - name: Overwrite Modification Timestamps of Source Files (so Build Cache is Valid)
      run: |
        cd TempoSample
        git ls-files | while read file; do
          timestamp=$(git log -1 --format=%cd --date=iso "$file")
          touch -d "$timestamp" "$file"
        done
        cd Plugins/Tempo
        git ls-files | while read file; do
          timestamp=$(git log -1 --format=%cd --date=iso "$file")
          touch -d "$timestamp" "$file"
        done
    - name: Sync TempoThirdParty Dependencies
      run: |
        mkdir -p TempoSample/Plugins/Tempo/TempoCore/Source/ThirdParty/gRPC/Libraries
        touch TempoSample/Plugins/Tempo/TempoCore/Source/ThirdParty/gRPC/Libraries/dummy.txt
        mkdir -p TempoSample/Plugins/Tempo/TempoROS/Source/ThirdParty/rclcpp/Libraries
        touch TempoSample/Plugins/Tempo/TempoROS/Source/ThirdParty/rclcpp/Libraries/dummy.txt
        TempoSample/Plugins/Tempo/Scripts/SyncDeps.sh -force
        TempoSample/Plugins/Tempo/TempoROS/Scripts/SyncDeps.sh -force
    - name: Find Common Ancestor with Main
      id: common_ancestor
      run: |
        cd TempoSample/Plugins/Tempo && echo "COMMON_ANCESTOR=$(git merge-base --fork-point origin/main)" >> $GITHUB_OUTPUT
    - name: Restore Build Cache from Main Common Ancestor
      id: build_cache
      uses: actions/cache/restore@v4
      with:
        path: |
          TempoSample/**/*.pb.cc
          TempoSample/**/*.pb.h
          TempoSample/Binaries/**
          TempoSample/Intermediate/**
          TempoSample/DerivedDataCache/**
          TempoSample/Saved/**
          TempoSample/Plugins/**/Intermediate/**
          TempoSample/Plugins/**/Binaries/**
        key: tempo-build-${{ env.UNREAL_VERSION }}-${{ steps.common_ancestor.outputs.COMMON_ANCESTOR }}
    - name: Cache Engine Mods
      id: cache-engine-mods
      uses: actions/cache@v4
      with:
        path: |
          .engine-mods-cache/Engine/Plugins/Runtime/ZoneGraph
          .engine-mods-cache/Engine/Plugins/AI/MassCrowd
          .engine-mods-cache/Engine/Source/Programs/UnrealBuildTool
          .engine-mods-cache/Engine/Binaries/DotNET/UnrealBuildTool
          .engine-mods-cache/Engine/Binaries/DotNET/AutomationTool
        key: tempo-engine-mods-${{ env.UNREAL_VERSION }}-${{ hashFiles('TempoSample/Plugins/Tempo/EngineMods/**') }}
    - name: Fix Permissions After Cache Restores
      run: |
        sudo chown -R 1000:1000 TempoSample/
        sudo chmod -R 755 TempoSample/
        sudo chown -R 1000:1000 .engine-mods-cache/
        sudo chmod -R 755 .engine-mods-cache/
    - name: Check Free Space Before Docker Pull
      run: df -h /
    - name: Log in to Epic Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ secrets.EPIC_DOCKER_USERNAME }}
        password: ${{ secrets.EPIC_DOCKER_TOKEN }}
    - name: Initialize Engine Mods Cache
      if: steps.cache-engine-mods.outputs.cache-hit != 'true'
      run: |
        mkdir -p .engine-mods-cache/Engine/Plugins/Runtime
        mkdir -p .engine-mods-cache/Engine/Plugins/AI
        mkdir -p .engine-mods-cache/Engine/Source/Programs
        mkdir -p .engine-mods-cache/Engine/Binaries/DotNET
        docker create --name temp_engine ghcr.io/epicgames/unreal-engine:dev-slim-${{ env.UNREAL_VERSION }}
        docker cp temp_engine:/home/ue4/UnrealEngine/Engine/Plugins/Runtime/ZoneGraph ${{ github.workspace }}/.engine-mods-cache/Engine/Plugins/Runtime
        docker cp temp_engine:/home/ue4/UnrealEngine/Engine/Plugins/AI/MassCrowd ${{ github.workspace }}/.engine-mods-cache/Engine/Plugins/AI
        docker cp temp_engine:/home/ue4/UnrealEngine/Engine/Source/Programs/UnrealBuildTool ${{ github.workspace }}/.engine-mods-cache/Engine/Source/Programs
        docker cp temp_engine:/home/ue4/UnrealEngine/Engine/Binaries/DotNET/UnrealBuildTool ${{ github.workspace }}/.engine-mods-cache/Engine/Binaries/DotNET
        docker cp temp_engine:/home/ue4/UnrealEngine/Engine/Binaries/DotNET/AutomationTool ${{ github.workspace }}/.engine-mods-cache/Engine/Binaries/DotNET
        docker rm temp_engine
    - name: Docker Pull Unreal Image & Build
      run: |
        docker run --rm \
          --user=root \
          -e UNREAL_ENGINE_PATH="/home/ue4/UnrealEngine" \
          -v ${{ github.workspace }}/.engine-mods-cache/Engine/Plugins/Runtime/ZoneGraph:/home/ue4/UnrealEngine/Engine/Plugins/Runtime/ZoneGraph \
          -v ${{ github.workspace }}/.engine-mods-cache/Engine/Plugins/AI/MassCrowd:/home/ue4/UnrealEngine/Engine/Plugins/AI/MassCrowd \
          -v ${{ github.workspace }}/.engine-mods-cache/Engine/Source/Programs/UnrealBuildTool:/home/ue4/UnrealEngine/Engine/Source/Programs/UnrealBuildTool \
          -v ${{ github.workspace }}/.engine-mods-cache/Engine/Binaries/DotNET/UnrealBuildTool:/home/ue4/UnrealEngine/Engine/Binaries/DotNET/UnrealBuildTool \
          -v ${{ github.workspace }}/.engine-mods-cache/Engine/Binaries/DotNET/AutomationTool:/home/ue4/UnrealEngine/Engine/Binaries/DotNET/AutomationTool \
          -v ${{ github.workspace }}/TempoSample:/home/ue4/TempoSample \
          ghcr.io/epicgames/unreal-engine:dev-slim-${{ env.UNREAL_VERSION }} \
          bash -c 'apt-get update && apt-get install -y jq rsync && \
                   su ue4 -c "/home/ue4/TempoSample/Plugins/Tempo/Scripts/InstallEngineMods.sh && \
                              /home/ue4/TempoSample/Scripts/Build.sh && \
                              /home/ue4/TempoSample/Scripts/Package.sh"'
    - name: Check Free Space After Build
      run: df -h /
    - name: Cache Build (only if main)
      # if: github.ref == 'refs/heads/main'
      uses: actions/cache/save@v4
      with:
        path: |
          TempoSample/**/*.pb.cc
          TempoSample/**/*.pb.h
          TempoSample/Binaries/**
          TempoSample/Intermediate/**
          TempoSample/DerivedDataCache/**
          TempoSample/Saved/**
          TempoSample/Plugins/**/Intermediate/**
          TempoSample/Plugins/**/Binaries/**
        # key: tempo-build-${{ env.UNREAL_VERSION }}-${{ github.sha }}
        key: tempo-build-${{ env.UNREAL_VERSION }}-${{ steps.common_ancestor.outputs.COMMON_ANCESTOR }}
